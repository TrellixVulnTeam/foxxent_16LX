{"ast":null,"code":"var _jsxFileName = \"/var/html/www/foxxent/src/components/protectedComponents/foxxDashboard/Genres/genres.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Chip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { discoverMovieGenres, discoverTvGenres } from \"../../../../dataStore/actions/discoverGenres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genres = ({\n  selectedGenres,\n  setSelectedGenres,\n  genres,\n  setGenres,\n  setPage\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleAdd = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres.filter(g => g.id !== genre.id));\n    setPage(1);\n  };\n\n  const handleRemove = genre => {\n    setSelectedGenres(selectedGenres.filter(selected => selected.id !== genre.id));\n    setGenres([...genres, genre]);\n    setPage(1);\n  };\n\n  const fetchGenres = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n    setGenres(data.genres);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"6px 0\"\n    },\n    children: [selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        margin: 2,\n        backgroundColor: \"white\"\n      },\n      label: genre.name,\n      color: \"primary\",\n      clickable: true,\n      size: \"small\",\n      onDelete: () => handleRemove(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)), genres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      clickable: true,\n      size: \"small\",\n      onClick: () => handleAdd(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Genres, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Genres;\nexport default Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/var/html/www/foxxent/src/components/protectedComponents/foxxDashboard/Genres/genres.jsx"],"names":["React","useEffect","Chip","useDispatch","useSelector","discoverMovieGenres","discoverTvGenres","Genres","selectedGenres","setSelectedGenres","genres","setGenres","setPage","dispatch","handleAdd","genre","filter","g","id","handleRemove","selected","fetchGenres","data","axios","get","type","process","env","REACT_APP_API_KEY","padding","map","margin","backgroundColor","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,QAAoD,8CAApD;;;AACA,MAAMC,MAAM,GAAG,CAAC;AACRC,EAAAA,cADQ;AAERC,EAAAA,iBAFQ;AAGRC,EAAAA,MAHQ;AAIRC,EAAAA,SAJQ;AAKRC,EAAAA;AALQ,CAAD,KAML;AAAA;;AAEN,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,SAAS,GAAIC,KAAD,IAAW;AACzBN,IAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBO,KAApB,CAAD,CAAjB;AACAJ,IAAAA,SAAS,CAACD,MAAM,CAACM,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,KAAK,CAACG,EAApC,CAAD,CAAT;AACAN,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAJD;;AAMA,QAAMO,YAAY,GAAIJ,KAAD,IAAW;AAC5BN,IAAAA,iBAAiB,CACbD,cAAc,CAACQ,MAAf,CAAuBI,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBH,KAAK,CAACG,EAA1D,CADa,CAAjB;AAGAP,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYK,KAAZ,CAAD,CAAT;AACAH,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAND;;AAQA,QAAMS,WAAW,GAAG,YAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,GAAN,CAClB,sCAAqCC,IAAK,iBAAgBC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBADtE,CAAvB;AAGAjB,IAAAA,SAAS,CAACW,IAAI,CAACZ,MAAN,CAAT;AACH,GALD;;AAMA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,eACKrB,cAAc,CAACsB,GAAf,CAAoBf,KAAD,iBAChB,QAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,eAAe,EAAE;AAA9B,OADX;AAEI,MAAA,KAAK,EAAEjB,KAAK,CAACkB,IAFjB;AAII,MAAA,KAAK,EAAC,SAJV;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,QAAQ,EAAE,MAAMd,YAAY,CAACJ,KAAD;AAPhC,OAGSA,KAAK,CAACG,EAHf;AAAA;AAAA;AAAA;AAAA,YADH,CADL,EAYKR,MAAM,CAACoB,GAAP,CAAYf,KAAD,iBACR,QAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,KAAK,EAAEhB,KAAK,CAACkB,IAFjB;AAII,MAAA,SAAS,MAJb;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,OAAO,EAAE,MAAMnB,SAAS,CAACC,KAAD;AAN5B,OAGSA,KAAK,CAACG,EAHf;AAAA;AAAA;AAAA;AAAA,YADH,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAvDD;;GAAMX,M;UAQeJ,W;;;KARfI,M;AAyDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Chip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {discoverMovieGenres, discoverTvGenres} from \"../../../../dataStore/actions/discoverGenres\";\nconst Genres = ({\n        selectedGenres,\n        setSelectedGenres,\n        genres,\n        setGenres,\n        setPage,\n    }) => {\n\n    const dispatch = useDispatch();\n\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres.filter((g) => g.id !== genre.id));\n        setPage(1);\n    };\n\n    const handleRemove = (genre) => {\n        setSelectedGenres(\n            selectedGenres.filter((selected) => selected.id !== genre.id)\n        );\n        setGenres([...genres, genre]);\n        setPage(1);\n    };\n\n    const fetchGenres = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        );\n        setGenres(data.genres);\n    };\n    return (\n        <div style={{ padding: \"6px 0\" }}>\n            {selectedGenres.map((genre) => (\n                <Chip\n                    style={{ margin: 2, backgroundColor: \"white\" }}\n                    label={genre.name}\n                    key={genre.id}\n                    color=\"primary\"\n                    clickable\n                    size=\"small\"\n                    onDelete={() => handleRemove(genre)}\n                />\n            ))}\n            {genres.map((genre) => (\n                <Chip\n                    style={{ margin: 2 }}\n                    label={genre.name}\n                    key={genre.id}\n                    clickable\n                    size=\"small\"\n                    onClick={() => handleAdd(genre)}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Genres;"]},"metadata":{},"sourceType":"module"}