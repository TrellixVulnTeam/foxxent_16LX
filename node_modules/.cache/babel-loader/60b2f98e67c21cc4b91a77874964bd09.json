{"ast":null,"code":"var _jsxFileName = \"/var/html/www/foxxent/src/components/protectedComponents/protectedRoutes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport SnackInfo from \"../../utils/SnackInfo\";\nimport Landing from \"../publicComponents/Landing\";\nimport FoxxDashboard from \"./foxxDashboard\";\nimport Auth from \"../publicComponents/Authentication\";\nimport Contact from \"../publicComponents/Brand/contact\";\nimport About from \"../publicComponents/Brand/about\";\n/**\r\n * @description Routing handler for dashboard components\r\n * @param {*} { props }\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  location\n}) => {\n  _s();\n\n  const [snackInfo, setSnackInfo] = useState({\n    open: false,\n    message: '',\n    vertical: 'bottom',\n    horizontal: 'left',\n    severity: 'info',\n    autoHideDuration: 5000\n  });\n  const isBrandPage = location.pathname === '/' || location.pathname === '/reviews' || location.pathname === '/blog' || location.pathname === '/contact' || location.pathname === '/about';\n  const isUserPage = location.pathname === '/user/login' || location.pathname === '/user/register';\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isUserPage ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unprotected-routes-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-section\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:type\",\n              render: () => /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 79\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : isBrandPage === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unprotected-routes-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        id: \"content-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"main-scrollable\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: () => /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/contact\",\n              render: () => /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              render: () => /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/dashboard/:dashboard_route\",\n          render: () => /*#__PURE__*/_jsxDEV(FoxxDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SnackInfo, {\n      snackInfo: snackInfo,\n      handleClose: () => setSnackInfo(snackInfo => ({ ...snackInfo,\n        open: false\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoutes, \"kJaQ+yqKpvt+qZ1vlTfDQ/vjXv4=\");\n\n_c = ProtectedRoutes;\nexport default _c2 = withRouter(ProtectedRoutes);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/var/html/www/foxxent/src/components/protectedComponents/protectedRoutes.jsx"],"names":["React","useState","Fragment","Route","Switch","Redirect","withRouter","SnackInfo","Landing","FoxxDashboard","Auth","Contact","About","ProtectedRoutes","location","snackInfo","setSnackInfo","open","message","vertical","horizontal","severity","autoHideDuration","isBrandPage","pathname","isUserPage"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport SnackInfo from \"../../utils/SnackInfo\";\r\nimport Landing from \"../publicComponents/Landing\";\r\nimport FoxxDashboard from \"./foxxDashboard\";\r\nimport Auth from \"../publicComponents/Authentication\";\r\nimport Contact from \"../publicComponents/Brand/contact\";\r\nimport About from \"../publicComponents/Brand/about\";\r\n/**\r\n * @description Routing handler for dashboard components\r\n * @param {*} { props }\r\n */\r\n\r\nconst ProtectedRoutes = ({ location }) => {\r\n    const [snackInfo, setSnackInfo] = useState({\r\n        open: false,\r\n        message: '',\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n        severity: 'info',\r\n        autoHideDuration: 5000,\r\n    });\r\n\r\n    const isBrandPage =\r\n        location.pathname === '/' ||\r\n        location.pathname === '/reviews' ||\r\n        location.pathname === '/blog' ||\r\n        location.pathname === '/contact' ||\r\n        location.pathname === '/about';\r\n\r\n    const isUserPage =\r\n        location.pathname === '/user/login' ||\r\n        location.pathname === '/user/register';\r\n\r\n    return (\r\n        <Fragment>\r\n            {isUserPage ? (\r\n                <Fragment>\r\n                    <div className=\"unprotected-routes-wrapper\">\r\n                        <div className=\"content-section\">\r\n                            <Switch>\r\n                                <Route exact path=\"/user/:type\" render={() => <Auth />} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            ) : isBrandPage === true ? (\r\n                <div className=\"unprotected-routes-wrapper\">\r\n                    <div className=\"content-section\" id=\"content-section\">\r\n                        <div id=\"main-scrollable\">\r\n                            <Switch>\r\n                                <Route exact path=\"/\" render={() => <Landing />} />\r\n                                <Route exact path=\"/contact\" render={() => <Contact />} />\r\n                                <Route exact path=\"/about\" render={() => <About />} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Switch>\r\n                    <div>\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/:dashboard_route\"\r\n                            render={() => (\r\n                                <FoxxDashboard/>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <Redirect to='/'/>\r\n                </Switch>\r\n            )}\r\n\r\n            <SnackInfo\r\n                snackInfo={snackInfo}\r\n                handleClose={() =>\r\n                    setSnackInfo(snackInfo => ({ ...snackInfo, open: false }))\r\n                }\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default withRouter(ProtectedRoutes);\r\n"]},"metadata":{},"sourceType":"module"}