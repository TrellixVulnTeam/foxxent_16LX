{"ast":null,"code":"var _jsxFileName = \"/var/html/www/foxxent/src/utils/SnackInfo.jsx\";\nimport React, { Fragment } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n/**\r\n * @description SnackInfo Component\r\n * @param {*} props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SnackInfo = ({\n  snackInfo,\n  handleClose\n}) => {\n  const {\n    open = false,\n    vertical = 'bottom',\n    horizontal = 'left',\n    message = '',\n    severity = 'info',\n    autoHideDuration\n  } = snackInfo;\n\n  const Alert = props => /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    open: open,\n    onClose: handleClose,\n    autoHideDuration: autoHideDuration,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      severity: severity,\n      action: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: snackInfo.snackbarAction && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-button outlined white\",\n          onClick: snackInfo.snackbarAction.handler,\n          children: snackInfo.snackbarAction.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this),\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, `${vertical} ${horizontal}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SnackInfo;\nexport default SnackInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackInfo\");","map":{"version":3,"sources":["/var/html/www/foxxent/src/utils/SnackInfo.jsx"],"names":["React","Fragment","Snackbar","MuiAlert","SnackInfo","snackInfo","handleClose","open","vertical","horizontal","message","severity","autoHideDuration","Alert","props","snackbarAction","handler","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAC9C,QAAM;AACFC,IAAAA,IAAI,GAAG,KADL;AAEFC,IAAAA,QAAQ,GAAG,QAFT;AAGFC,IAAAA,UAAU,GAAG,MAHX;AAIFC,IAAAA,OAAO,GAAG,EAJR;AAKFC,IAAAA,QAAQ,GAAG,MALT;AAMFC,IAAAA;AANE,MAOFP,SAPJ;;AASA,QAAMQ,KAAK,GAAGC,KAAK,iBAAI,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAvB;;AACA,sBACI,QAAC,QAAD;AACI,IAAA,YAAY,EAAE;AAAEN,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KADlB;AAGI,IAAA,IAAI,EAAEF,IAHV;AAII,IAAA,OAAO,EAAED,WAJb;AAKI,IAAA,gBAAgB,EAAEM,gBALtB;AAAA,2BAOI,QAAC,KAAD;AACI,MAAA,QAAQ,EAAED,QADd;AAEI,MAAA,MAAM,eACF,QAAC,QAAD;AAAA,kBACKN,SAAS,CAACU,cAAV,iBACG;AACI,UAAA,SAAS,EAAC,8BADd;AAEI,UAAA,OAAO,EAAEV,SAAS,CAACU,cAAV,CAAyBC,OAFtC;AAAA,oBAIKX,SAAS,CAACU,cAAV,CAAyBE;AAJ9B;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA,gBAeKP;AAfL;AAAA;AAAA;AAAA;AAAA;AAPJ,KAEU,GAAEF,QAAS,IAAGC,UAAW,EAFnC;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAtCD;;KAAML,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n/**\r\n * @description SnackInfo Component\r\n * @param {*} props\r\n */\r\n\r\nconst SnackInfo = ({ snackInfo, handleClose }) => {\r\n    const {\r\n        open = false,\r\n        vertical = 'bottom',\r\n        horizontal = 'left',\r\n        message = '',\r\n        severity = 'info',\r\n        autoHideDuration,\r\n    } = snackInfo;\r\n\r\n    const Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{ vertical, horizontal }}\r\n            key={`${vertical} ${horizontal}`}\r\n            open={open}\r\n            onClose={handleClose}\r\n            autoHideDuration={autoHideDuration}\r\n        >\r\n            <Alert\r\n                severity={severity}\r\n                action={\r\n                    <Fragment>\r\n                        {snackInfo.snackbarAction && (\r\n                            <button\r\n                                className=\"custom-button outlined white\"\r\n                                onClick={snackInfo.snackbarAction.handler}\r\n                            >\r\n                                {snackInfo.snackbarAction.title}\r\n                            </button>\r\n                        )}\r\n                    </Fragment>\r\n                }\r\n            >\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default SnackInfo;\r\n"]},"metadata":{},"sourceType":"module"}